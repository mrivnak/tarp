name: Cargo Check

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set release version
        run: pwsh ./res/scripts/SetVersion.ps1 ${{ github.ref_name }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install PNPM
        uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - name: Install Linux Dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              file \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev
      
      - name: Build
        run: pnpm tauri build

      - name: Check prerelease
        id: check-prerelease
        run: |
          pip3 install semver
          python3 -c "import semver; print('prerelease=true') if semver.Version.parse('${{ github.ref_name }}'.replace('v', '')).prerelease else print('prerelease=false')" >> $GITHUB_OUTPUT

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          prerelease: ${{ steps.check-prerelease.outputs.prerelease }}
          fail_on_unmatched_files: false
          files: |
            ./src-tauri/release/bundle/deb/*.deb
            ./src-tauri/release/bundle/appimage/*.AppImage
          name: Release ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
